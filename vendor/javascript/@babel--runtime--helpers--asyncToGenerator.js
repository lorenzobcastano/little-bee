function asyncGeneratorStep(n,t,e,r,o,a,c){try{var u=n[a](c);var i=u.value}catch(n){e(n);return}u.done?t(i):Promise.resolve(i).then(r,o)}function _asyncToGenerator(n){return function(){var t=this,e=arguments;return new Promise((function(r,o){var a=n.apply(t,e);function _next(n){asyncGeneratorStep(a,r,o,_next,_throw,"next",n)}function _throw(n){asyncGeneratorStep(a,r,o,_next,_throw,"throw",n)}_next(void 0)}))}}export{_asyncToGenerator as default};

